name: CI
on:
  push:
    branches:
      - $default-branch
      - release-*
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  build:
    if:
      (github.event_name == 'pull_request_target' && github.event.pull_request.user.login == 'dependabot[bot]') ||
      (github.event_name == 'pull_request' && github.event.pull_request.user.login != 'dependabot[bot]') ||
      github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            name: Windows
          - os: ubuntu-20.04
            name: Linux
      fail-fast: false
    steps:
      - name: Check for secrets
        env:
          SECRETS_AVAILABLE: ${{ secrets.SECRETS_AVAILABLE }}
        shell: pwsh
        run: exit $(If ($env:SECRETS_AVAILABLE -eq 'true') { 0 } Else { 1 })
      - name: Checkout
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Checkout for Dependabot
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v2.3.4
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1.8.1
        with:
          dotnet-version: 5.0.x
      - name: Setup .NET Core 3.1 runtime
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 3.1.x
      - name: Build
        run: dotnet build src --configuration Release
      - name: Upload packages
        if: matrix.name == 'Windows'
        uses: actions/upload-artifact@v2.2.2
        with:
          name: NuGet packages
          path: nugets/
          retention-days: 7
      - name: Azure login
        uses: azure/login@v1.3.0
        with:
          creds: ${{ secrets.AZURE_ACI_CREDENTIALS }}
      - name: Setup Infrastructure
        id: setup-infrastructure
        shell: pwsh
        run:
        # Retrieve the Azure region in which this workflow is running. This region should be used to create addtional resources.
          $hostInfo = curl -H Metadata:true "169.254.169.254/metadata/instance?api-version=2017-08-01" | ConvertFrom-Json
          $region = $hostInfo.compute.location

        # Provide a PowerShell script that will initialize dependent infrastructure. Use the GitHubActions-RG resource group for all resources.
        # Check for error conditions and ensure that the dependent infrastructure is available and running before moving to the next step.
        # Output parameters can be set for future steps to use by using the echo ::set-output name=key::value command.
      - name: Run Windows tests
        if: matrix.name == 'Windows'
        # -m:1 parameter prevents test projects from being run in parallel.
        run: dotnet test src --configuration Release --no-build --logger "GitHubActions;report-warnings=false" -m:1
      - name: Run Linux tests
        if: matrix.name == 'Linux'
        # -m:1 parameter prevents test projects from being run in parallel.
        run: |
          dotnet test src --configuration Release --no-build --framework netcoreapp3.1 --logger "GitHubActions;report-warnings=false"
          dotnet test src --configuration Release --no-build --framework net5.0 --logger "GitHubActions;report-warnings=false"
      - name: Teardown Infrastructure

        if: ${{ always() }}
        shell: pwsh
        run:
        # Provide a PowerShell script that will shutdown/clean up any dependent infrastructure that has been set up.
        # Any output parameters specified in the setup stage can be accessed by using {{steps.setup-infrastructure.outputs.key}}
